{"version":3,"file":"static/js/681.e3e5bd4a.chunk.js","mappings":"iOAsCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAa,GAAD,OAAIN,EAAJ,aACTO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPJ,EAAWI,EACZ,IACAC,OAAM,kBACLC,EAAAA,GAAAA,MAAA,sDADK,GAGV,GAAE,CAACV,KAEF,2BACU,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASQ,QAAS,EACjBR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADC,KAOZ,SAAC,KAAD,UAxBiB,gDA0BnB,SAAC,KAAD,MAGL,C,mJClCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAU,sBADL,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdb,EAAY,mCAAG,WAAMO,GAAN,yFACHG,EAAAA,EAAAA,IAAA,iBAAoBH,IADjB,uBAClBM,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZC,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,gBAA2B,CAChDM,OAAQ,CACND,MAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,qD","sources":["components/Reviews.jsx","movieAPI.js"],"sourcesContent":["import { getMovieById } from \"../movieAPI\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Message } from \"../styles/Cast.styled\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst anApologyMessage = 'Sorry, but there are currently no reviews!';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    getMovieById(`${movieId}/reviews`)\n      .then(({ results }) => {\n        setReviews(results);\n      })\n      .catch(() =>\n        toast.error(`Oops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n  return (\n    <ul>\n      {reviews?.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <Message>{anApologyMessage}</Message>\n      )}\n      <ToastContainer />\n    </ul>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\nconst API_KEY = '471085eef302fbeb69aee8ca65e58e67';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieById","then","results","catch","toast","length","map","id","author","content","axios","api_key","getTrendMovies","data","getMovieByName","query","params"],"sourceRoot":""}