{"version":3,"file":"static/js/92.fa147636.chunk.js","mappings":"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","sources":["movieAPI.js","styles/SearchBar.styled.js","components/SearchBar.jsx","pages/Movies.jsx","styles/MoviesList.styled.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '471085eef302fbeb69aee8ca65e58e67';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};","import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  right: 6px;\n  transform: scale(1);\n  &:hover {\n    transform: scale(1.25);\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid black;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  height: 20px;\n  padding: 0px 5px;\n  opacity: 0.4;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding: 4px;\n  border-radius: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { useState } from 'react';\nimport {\n  SearchForm,\n  FormButton,\n  FormInput,\n  Icon,\n} from '../styles/SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <FormInput\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n      />\n      <FormButton type=\"submit\">\n        <Icon />\n      </FormButton>\n    </SearchForm>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;","import { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getMovieByName } from '../movieAPI';\nimport { Container, CardsWrapper, Images, MovieName } from \"../styles/MoviesList.styled\"\nimport SearchBar from \"../components/SearchBar\";\nimport notFound from \"../images/notFound.jpg\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [ movies, setMovies ] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n\n    useEffect(() => {\n        getMovieByName(movieName).then(({ results }) => {\n            setMovies([...results]);\n        })\n            .catch(() =>\n                toast.error(`Oops, something went wrong! Please try again later!`)\n        )\n    }, [movieName]);\n\n  const updateQueryString = evt => {\n    const movieNameValue = evt.target.value;\n    if (movieNameValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieName: movieNameValue });\n  };\n\n  return (\n    <main>\n      <SearchBar type=\"text\" value={movieName} onSubmit={updateQueryString} />\n      <Container>\n        {movies.map(({id, original_title, poster_path}) => {\n          return (\n            <CardsWrapper  key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <Images\n                    src={\n                        poster_path\n                        ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                        : `${notFound}`\n                    }\n                    alt={original_title}\n                />\n                <MovieName>{original_title}</MovieName>\n              </Link>\n            </CardsWrapper>\n          );\n        })}\n            <Suspense>\n              <Outlet />\n            </Suspense>\n            <ToastContainer />\n          </Container>\n    </main>\n  );\n};\n\nexport default Movies;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const CardsWrapper = styled.div`\n  border: 1px solid ${props => props.theme.colors.white};\n  background-color: ${props => props.theme.colors.white};\n  border-radius: 8px;\n  transform: scale(1);\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Images = styled.img`\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin: 0px;\n  color: ${props => props.theme.colors.black};\n  text-align: center;\n`;"],"names":["axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","Icon","styled","HiSearch","SearchForm","FormButton","FormInput","onSubmit","useState","setQuery","e","preventDefault","type","value","onChange","currentTarget","placeholder","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then","results","catch","toast","evt","movieNameValue","target","map","original_title","poster_path","to","state","from","src","notFound","alt","Suspense","Container","CardsWrapper","props","theme","colors","white","Images","MovieName","black"],"sourceRoot":""}